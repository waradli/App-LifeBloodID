Index: app/src/main/java/com/example/appslifebloodid/route/BottomGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.appslifebloodid.route\r\n\r\nimport android.os.Build\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.NavType\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.navArgument\r\nimport com.example.appslifebloodid.ui.page.AboutScreen\r\nimport com.example.appslifebloodid.page.Component.NavigateScreen.KebijakanPrivasi\r\nimport com.example.appslifebloodid.page.Component.NavigateScreen.KetentuanPengguna\r\nimport com.example.appslifebloodid.page.Component.NavigateScreen.Pertanyaan\r\nimport com.example.appslifebloodid.page.Component.NavigateScreen.PusatBantuan\r\nimport com.example.appslifebloodid.page.Component.NavigateScreen.TentangAplikasi\r\nimport com.example.appslifebloodid.ui.page.EventScreen\r\nimport com.example.appslifebloodid.ui.page.RiwayatScreen\r\nimport com.example.appslifebloodid.ui.base.AuthViewModel\r\nimport com.example.appslifebloodid.ui.base.EventRegistrationViewModel\r\nimport com.example.appslifebloodid.ui.intro.FirstScreen\r\nimport com.example.appslifebloodid.ui.intro.onboarding.components.menu_home.LihatSemua\r\nimport com.example.appslifebloodid.ui.intro.onboarding.components.menu_home.PendaftaranEvent\r\nimport com.example.appslifebloodid.ui.intro.onboarding.components.menu_home.RincianDaftar\r\nimport com.example.appslifebloodid.ui.page.HomeScreen\r\nimport com.example.appslifebloodid.ui.page.component.menu_home.DetailArtikel\r\nimport com.example.appslifebloodid.ui.page.component.menu_home.DetailEvent\r\nimport com.example.appslifebloodid.ui.page.component.menu_home.ScreenReward\r\nimport com.example.appslifebloodid.ui.page.component.menu_home.ScreenStockDarah\r\nimport com.example.appslifebloodid.ui.page.component.menu_home.chat.ScreenChat\r\nimport com.example.appslifebloodid.ui.page.component.menu_home.chat.ScreenDaftarDr\r\nimport com.example.appslifebloodid.ui.page.component.menu_home.jadwal.ScreenJadwalDonor\r\nimport com.example.appslifebloodid.ui.page.component.notifikasi.ScreenNotifikasi\r\nimport com.example.appslifebloodid.ui.page.component.profile.ProfileScreen\r\n\r\n@RequiresApi(Build.VERSION_CODES.O)\r\n@Composable\r\nfun BottomGraph(\r\n    navController: NavHostController,\r\n    authViewModel: AuthViewModel,\r\n    modifier: Modifier = Modifier,\r\n) {\r\n    lateinit var eventRegistrationViewModel: EventRegistrationViewModel\r\n    NavHost(navController = navController, startDestination = RouteBotNav.Home.route) {\r\n        composable(route = RouteBotNav.Home.route) {\r\n            HomeScreen(navController = navController, authViewModel = authViewModel)\r\n        }\r\n        composable(route = RouteBotNav.Riwayat.route) {\r\n            RiwayatScreen()\r\n        }\r\n        composable(route = RouteBotNav.Event.route) {\r\n            EventScreen(navController = navController)\r\n        }\r\n        composable(route = RouteBotNav.About.route) {\r\n            AboutScreen(navController = navController, authViewModel = authViewModel)\r\n        }\r\n\r\n        composable(\"loginScreen\") { FirstScreen(navController = navController) }\r\n\r\n        // New Screen About\r\n        composable(route = \"TentangAplikasi\") {\r\n            TentangAplikasi(navController = navController)\r\n        }\r\n        composable(route = \"Kebijakan&Privasi\") {\r\n            KebijakanPrivasi(navController = navController)\r\n        }\r\n        composable(route = \"PusatBantuan\") {\r\n            PusatBantuan(navController = navController)\r\n        }\r\n        composable(route = \"KetentuanPengguna\") {\r\n            KetentuanPengguna(navController = navController)\r\n        }\r\n        composable(route = \"PertanyaanYangSeringDitanyakan\") {\r\n            Pertanyaan(navController = navController)\r\n        }\r\n\r\n        //ScreenMenuHome\r\n        composable(route = \"ScreenReward\") {\r\n            ScreenReward(navController = navController)\r\n        }\r\n        composable(route = \"ScreenChat\") {\r\n            ScreenChat(navController = navController, username = \"\")\r\n        }\r\n        composable(route = \"ScreenDaftarDr\") {\r\n            ScreenDaftarDr(navController = navController)\r\n        }\r\n        composable(route = \"ScreenStockDarah\") {\r\n            ScreenStockDarah(navController = navController)\r\n        }\r\n        composable(route = \"ScreenDonor\") {\r\n            ScreenJadwalDonor(navController = navController)\r\n        }\r\n        composable(route = \"ScreenProfile\") {\r\n            ProfileScreen(navController = navController, authViewModel = authViewModel)\r\n        }\r\n        composable(route = \"ScreenNotif\") {\r\n            ScreenNotifikasi(navController=navController)\r\n        }\r\n        composable(route = \"LihatSemua\") {\r\n            LihatSemua(navController = navController)\r\n        }\r\n\r\n\r\n        // Event\r\n        composable(route = \"PendaftaranEvent\") {\r\n            PendaftaranEvent(navController = navController  )\r\n        }\r\n        \r\n        //rincian daftar\r\n        composable(route = \"RincianDaftar\"){\r\n            RincianDaftar(navController = navController)\r\n        }\r\n\r\n        composable(\r\n            route = \"DetailArtikel/{artikeleId}\",\r\n            arguments = listOf(navArgument(\"artikeleId\") { type = NavType.IntType })\r\n        ) { backStackEntry ->\r\n            val artikelId = backStackEntry.arguments?.getInt(\"artikelId\") ?: 0\r\n            DetailArtikel(navController = navController, artikelId = artikelId)\r\n        }\r\n        composable(\r\n            route = \"DetailEvent/{locationId}\",\r\n            arguments = listOf(navArgument(\"locationId\") { type = NavType.IntType })\r\n        ) { backStackEntry ->\r\n            val locationId = backStackEntry.arguments?.getInt(\"locationId\") ?: 0\r\n            DetailEvent(navController = navController, locationId = locationId)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/appslifebloodid/route/BottomGraph.kt b/app/src/main/java/com/example/appslifebloodid/route/BottomGraph.kt
--- a/app/src/main/java/com/example/appslifebloodid/route/BottomGraph.kt	
+++ b/app/src/main/java/com/example/appslifebloodid/route/BottomGraph.kt	
@@ -113,8 +113,8 @@
         }
 
         composable(
-            route = "DetailArtikel/{artikeleId}",
-            arguments = listOf(navArgument("artikeleId") { type = NavType.IntType })
+            route = "DetailArtikel/{artikelId}",
+            arguments = listOf(navArgument("artikelId") { type = NavType.IntType })
         ) { backStackEntry ->
             val artikelId = backStackEntry.arguments?.getInt("artikelId") ?: 0
             DetailArtikel(navController = navController, artikelId = artikelId)
Index: app/src/main/java/com/example/appslifebloodid/route/BotNavBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.appslifebloodid.route\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.os.Build\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.compose.animation.AnimatedVisibility\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.RowScope\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport androidx.navigation.NavDestination\r\nimport androidx.navigation.NavDestination.Companion.hierarchy\r\nimport androidx.navigation.NavGraph.Companion.findStartDestination\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.appslifebloodid.ui.base.AuthViewModel\r\n\r\n@RequiresApi(Build.VERSION_CODES.O)\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun BotNavBar(\r\n    authViewModel: AuthViewModel\r\n) {\r\n    val navController = rememberNavController()\r\n    Scaffold(\r\n        bottomBar = {\r\n            val navBackStackEntry by navController.currentBackStackEntryAsState()\r\n            val currentDestination = navBackStackEntry?.destination?.route\r\n\r\n            val shouldHideBottomBar = currentDestination in listOf(\r\n                // Home Screen\r\n                // Box Home\r\n                \"ScreenChat\",\r\n                \"ScreenReward\",\r\n                \"ScreenStockDarah\",\r\n                \"ScreenDonor\",\r\n\r\n                // Artikel Donor Darah\r\n                \"DetailArtikel/{artikelId}\",\r\n                \"DetailEvent/{eventId}\",\r\n\r\n                // Screen Chat\r\n                \"ScreenDaftarDr\",\r\n\r\n                // Lihat Semua\r\n                \"LihatSemua\",\r\n\r\n                // Profile\r\n                \"ScreenProfile\",\r\n\r\n                //  About\r\n                \"TentangAplikasi\",\r\n                \"Kebijakan&Privasi\",\r\n                \"PusatBantuan\",\r\n                \"KetentuanPengguna\",\r\n                \"PertanyaanYangSeringDitanyakan\",\r\n\r\n\r\n                \"loginScreen\",\r\n\r\n                // Event\r\n                \"PendaftaranEvent\",\r\n                \"DetailEvent/{locationId}\",\r\n\r\n                // Event\r\n                \"ScreenNotif\",\r\n\r\n\r\n\r\n\r\n\r\n            )\r\n            AnimatedVisibility(visible = !shouldHideBottomBar) {\r\n                BottomBar(navController = navController)\r\n            }\r\n        }\r\n    ) { innerPadding ->\r\n        BottomGraph(\r\n            navController = navController,\r\n            authViewModel = authViewModel,\r\n            modifier = Modifier.padding(innerPadding),\r\n        )\r\n    }\r\n\r\n}\r\n\r\n@Composable\r\nfun BottomBar(\r\n    navController: NavHostController,\r\n) {\r\n    val Screens = listOf(\r\n        RouteBotNav.Home,\r\n        RouteBotNav.Riwayat,\r\n        RouteBotNav.Event,\r\n        RouteBotNav.About,\r\n    )\r\n    val navBackStackEntry by navController.currentBackStackEntryAsState()\r\n    val currentDestination = navBackStackEntry?.destination\r\n    Row(\r\n        modifier = Modifier\r\n            .padding(horizontal = 10.dp, vertical = 60.dp)\r\n            .background(Color(0xffb20909), shape = RoundedCornerShape(25))\r\n            .height(70.dp)\r\n            .fillMaxWidth(),\r\n\r\n\r\n        horizontalArrangement = Arrangement.SpaceBetween,\r\n        verticalAlignment = Alignment.CenterVertically\r\n    ) {\r\n        Screens.forEach { Screens ->\r\n            AddItem(\r\n                Screens = Screens,\r\n                currentDestination = currentDestination,\r\n                navController = navController\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun RowScope.AddItem(\r\n    Screens: RouteBotNav,\r\n    currentDestination: NavDestination?,\r\n    navController: NavHostController,\r\n) {\r\n    val selected = currentDestination?.hierarchy?.any() { it.route == Screens.route } == true\r\n    val contentColor = if (selected) Color(0xFFb20909) else Color(\r\n        0xffF1F1F1\r\n    )\r\n    val background = if (selected) Color(\r\n        0xffF1F1F1\r\n    ).copy(alpha = 1f) else Color.Transparent\r\n    Box(\r\n        modifier = Modifier\r\n            .height(50.dp)\r\n            .padding(start = 15.dp, end = 15.dp)\r\n            .background(background, shape = RoundedCornerShape(25))\r\n            .clickable(onClick = {\r\n                navController.navigate(Screens.route) {\r\n                    popUpTo(navController.graph.findStartDestination().id)\r\n                    launchSingleTop = true\r\n                    restoreState = true\r\n\r\n                }\r\n            })\r\n    ) {\r\n        Row(\r\n            modifier = Modifier.padding(start = 5.dp, end = 5.dp, bottom = 5.dp, top = 8.dp),\r\n            verticalAlignment = Alignment.CenterVertically,\r\n            horizontalArrangement = Arrangement.spacedBy(4.dp)\r\n        ) {\r\n            Icon(\r\n                painter = painterResource(id = if (selected) Screens.focused else Screens.icon),\r\n                contentDescription = \"icon\",\r\n                tint = contentColor\r\n            )\r\n            AnimatedVisibility(visible = selected) {\r\n                Text(\r\n                    text = Screens.title, style = TextStyle(\r\n                        fontSize = 15.sp,\r\n                        fontWeight = FontWeight.SemiBold\r\n                    ), color = contentColor\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@RequiresApi(Build.VERSION_CODES.O)\r\n@Preview(showBackground = true)\r\n@Composable\r\nprivate fun BotNavBarPrev() {\r\n    val authViewModel = viewModel<AuthViewModel>()\r\n    BotNavBar(authViewModel = authViewModel)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/appslifebloodid/route/BotNavBar.kt b/app/src/main/java/com/example/appslifebloodid/route/BotNavBar.kt
--- a/app/src/main/java/com/example/appslifebloodid/route/BotNavBar.kt	
+++ b/app/src/main/java/com/example/appslifebloodid/route/BotNavBar.kt	
@@ -61,6 +61,7 @@
                 "DetailArtikel/{artikelId}",
                 "DetailEvent/{eventId}",
 
+
                 // Screen Chat
                 "ScreenDaftarDr",
 
Index: app/src/main/java/com/example/appslifebloodid/ui/intro/onboarding/components/menu_home/RincianDaftar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.appslifebloodid.ui.intro.onboarding.components.menu_home\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.KeyboardArrowLeft\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Divider\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.graphicsLayer\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.appslifebloodid.R\r\n\r\n@Composable\r\nfun RincianDaftar(\r\n    modifier: Modifier = Modifier,\r\n    navController: NavController\r\n) {\r\n    Column {\r\n        IconButton(\r\n            onClick = { navController.popBackStack() },\r\n            modifier = Modifier.padding(top = 25.dp)\r\n        ) {\r\n            Icon(\r\n                imageVector = Icons.Default.KeyboardArrowLeft,\r\n                tint = Color.Black,\r\n                modifier = Modifier.size(width = 30.dp, height = 30.dp),\r\n                contentDescription = \"Icon Arrow\"\r\n            )\r\n        }\r\n        Card(\r\n            modifier = modifier\r\n                .padding(16.dp)\r\n                .width(350.dp)\r\n                .height(350.dp),\r\n            shape = RoundedCornerShape(8.dp),\r\n            elevation = CardDefaults.cardElevation(8.dp)\r\n        ) {\r\n            Column {\r\n                Row {\r\n                    Box(modifier = Modifier.padding(all = 20.dp)) {\r\n                        Image(\r\n                            painter = painterResource(id = R.drawable.img_profile),\r\n                            contentDescription = \"profil\",\r\n                            modifier = Modifier.size(100.dp)\r\n                        )\r\n                    }\r\n                    Column(modifier = Modifier.padding(top = 20.dp)) {\r\n                        Text(text = \"Ali Wardana\", fontSize = 18.sp)\r\n                        Divider(\r\n                            modifier = Modifier.width(200.dp),\r\n                            thickness = 1.dp,\r\n                            color = Color.Black\r\n                        )\r\n                        Spacer(modifier = Modifier.height(5.dp))\r\n                        Text(text = \"00123\", fontSize = 18.sp)\r\n                        Divider(\r\n                            modifier = Modifier.width(200.dp),\r\n                            thickness = 1.dp,\r\n                            color = Color.Black\r\n                        )\r\n                        Spacer(modifier = Modifier.height(5.dp))\r\n                        Text(text = \"Laki - Laki\", fontSize = 18.sp)\r\n                        Divider(\r\n                            modifier = Modifier.width(200.dp),\r\n                            thickness = 1.dp,\r\n                            color = Color.Black\r\n                        )\r\n                        Spacer(modifier = Modifier.height(5.dp))\r\n                        Text(text = \"22 Maret 2024\", fontSize = 18.sp)\r\n                        Divider(\r\n                            modifier = Modifier.width(200.dp),\r\n                            thickness = 1.dp,\r\n                            color = Color.Black\r\n                        )\r\n                        Spacer(modifier = Modifier.height(5.dp))\r\n                        Text(text = \"Jl. Hayam Muruk, No.5\", fontSize = 18.sp)\r\n                        Divider(\r\n                            modifier = Modifier.width(200.dp),\r\n                            thickness = 1.dp,\r\n                            color = Color.Black\r\n                        )\r\n                    }\r\n\r\n                }\r\n                Spacer(modifier = Modifier.height(15.dp))\r\n                Divider(\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    thickness = 1.dp,\r\n                    color = Color.Black\r\n                )\r\n                Row {\r\n                    Column(modifier = Modifier.padding(top = 10.dp, start = 10.dp)) {\r\n                        Text(\r\n                            text = \"Golongan Darah :\",\r\n                            fontSize = 18.sp,\r\n                            fontWeight = FontWeight.Bold\r\n                        )\r\n                        Text(\r\n                            text = \"A\",\r\n                            fontSize = 150.sp,\r\n                            fontWeight = FontWeight.Bold,\r\n                            modifier = Modifier.padding(start = 30.dp)\r\n                        )\r\n                    }\r\n                    Divider(\r\n                        thickness = 1.dp, color = Color.Black, modifier = Modifier\r\n                            .padding(start = 55.dp)\r\n                            .size(width = 1.dp, height = 200.dp)\r\n                            .graphicsLayer(rotationZ = 180f)\r\n                    )\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.barcode),\r\n\r\n                        contentDescription = \"barcode\",\r\n                        modifier = Modifier\r\n                            .padding(20.dp)\r\n                            .size(150.dp)\r\n                    )\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/appslifebloodid/ui/intro/onboarding/components/menu_home/RincianDaftar.kt b/app/src/main/java/com/example/appslifebloodid/ui/intro/onboarding/components/menu_home/RincianDaftar.kt
--- a/app/src/main/java/com/example/appslifebloodid/ui/intro/onboarding/components/menu_home/RincianDaftar.kt	
+++ b/app/src/main/java/com/example/appslifebloodid/ui/intro/onboarding/components/menu_home/RincianDaftar.kt	
@@ -130,7 +130,6 @@
                     )
                     Image(
                         painter = painterResource(id = R.drawable.barcode),
-
                         contentDescription = "barcode",
                         modifier = Modifier
                             .padding(20.dp)
